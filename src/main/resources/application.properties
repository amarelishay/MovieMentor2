# ===============================
# 🌐 SERVER SETTINGS
# ===============================
server.port=8080

# ===============================
# 🛢️ DATABASE (PostgreSQL - Render)
# ===============================
#spring.datasource.url=jdbc:postgresql://dpg-d1pshgk9c44c738vguq0-a.frankfurt-postgres.render.com:5432/moviementordb_vl6d
#spring.datasource.username=moviementordb_user
#spring.datasource.password=${POSTGRES_PASSWORD}
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/moviementor?serverTimezone=UTC&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# ===============================
# 📦 JPA / HIBERNATE
# ===============================
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
# COMMENT OUT THE POSTGRESQL DIALECT
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
# ===============================
# 🔄 SPRING CORE
# ===============================
spring.main.allow-bean-definition-overriding=true
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# ===============================
# 🧾 LOGGING (לבדיקות פיתוח)
# ===============================
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# logging.level.root=OFF

# ===============================
# 🎬 TMDB API Configuration
# ===============================
tmdb.api.base-url=https://api.themoviedb.org/3
tmdb.api.token=${TMDB_KEY}
# ===============================
# 📊 Swagger / Springdoc
# ===============================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000
openai.api.key=${OPENAI_API_KEY}
spring.main.allow-circular-references=true



# 📊 Qdrant Vector DB
# ===============================
qdrant.api.url=https://9e580eaa-8aca-4521-9316-e886d2ed2cc3.europe-west3-0.gcp.cloud.qdrant.io:6333
qdrant.api.key=${QDRANT_KEY}
qdrant.collection.name=Movie_Mentor
openai.api.key.vector=${OPENAI_VECTOR_API_KEY}
# ⚙️ CACHING (Redis - Redis Cloud) - ACTIVATED FOR CLOUD
# ===============================
#spring.cache.type=redis
#spring.redis.host=redis-10601.crce176.me-central-1-1.ec2.redns.redis-cloud.com
#spring.redis.port=10601
#spring.redis.password=${REDIS_KEY}
#spring.redis.ssl.enabled=true # חשוב מאוד: עבור Redis Cloud זה בדרך כלל true
#spring.cache.type=redis
#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.ssl.enabled=false
spring.redis.host=redis-10601.crce176.me-central-1-1.ec2.redns.redis-cloud.com
spring.redis.port=10601
spring.redis.password=${REDIS_KEY}
spring.redis.ssl.enabled=true